{
    "version": "https://jsonfeed.org/version/1",
    "title": "Raven",
    "home_page_url": "http://raven.surge.sh/",
    "feed_url": "http://raven.surge.sh/json",
    "description": "A refined and flexible static blog generator",
    "icon": "http://raven.surge.sh/favicon-32x32.png",
    "author": {
        "name": "Bryan Stoner",
        "url": "http://mimoduo.surge.sh/"
    },
    "items": [
        {
            "id": "future-post",
            "html_content": "",
            "url": "http://raven.surge.sh/future-post.html",
            "title": "From the Future",
            "summary": "Posts from the future will not be displayed unless their date is older than or equal to the current date",
            "date_modified": "2220-06-29T00:00:00Z",
            "author": {
                "name": "Bryan Stoner",
                "url": "http://mimoduo.surge.sh/"
            }
        },
        {
            "id": "markdown-style-guide",
            "html_content": "<h1 id=\"h1\">h1</h1>\n<p><strong>Heading 1</strong> has <em>1 pounds sign</em>.</p>\n<h2 id=\"h2\">h2</h2>\n<p><strong>Heading 2</strong> has <em>2 pounds signs</em>.</p>\n<h3 id=\"h3\">h3</h3>\n<p><strong>Heading 3</strong> has <em>3 pounds signs</em>.</p>\n<h4 id=\"h4\">h4</h4>\n<p><strong>Heading 4</strong> has <em>4 pounds signs</em>.</p>\n<h5 id=\"h5\">h5</h5>\n<p><strong>Heading 5</strong> has <em>5 pounds signs</em>.</p>\n<h6 id=\"h6\">h6</h6>\n<p><strong>Heading 6</strong> has <em>6 pounds signs</em>.</p>\n<h3 id=\"formatting-text\">Formatting Text</h3>\n<p>A paragraph can be as simple as <strong>bolded text</strong> or as hard as <em>italicized marks</em>. Yet creating a <a href=\"google.com\">link</a> can be as easy as pie.</p>\n<h3 id=\"blockquotes\">Blockquotes</h3>\n<blockquote>\n<p>And there's always the trusty blockquote to emphasize an incredible situation.</p>\n</blockquote>\n<h3 id=\"unordered-list\">Unordered List</h3>\n<ul>\n<li>Lists</li>\n<li>are</li>\n<li>just</li>\n<li>as</li>\n<li>simple</li>\n</ul>\n<h3 id=\"ordered-list\">Ordered List</h3>\n<ol>\n<li>So</li>\n<li>are</li>\n<li>ordered</li>\n<li>lists</li>\n</ol>\n<h3 id=\"code-snippets\">Code Snippets</h3>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-class\">.mage</span> {\n  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">'code snippet'</span>\n}\n</code></pre>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">var</span> delthea = <span class=\"hljs-string\">'orange raven'</span>;\n</code></pre>\n<h3 id=\"tables\">Tables</h3>\n<table>\n  <tr>\n    <th>Effect</th>\n    <th>Example</th>\n  </tr>\n  <tr>\n    <td>Willstrums</td>\n    <td>Dating a tree back to the 18th century</td>\n  </tr>\n  <tr>\n    <td>Tashle</td>\n    <td>Assigning a rabbit the name of a turtle</td>\n  </tr>\n</table>\n",
            "url": "http://raven.surge.sh/markdown-style-guide.html",
            "title": "Markdown Style Guide",
            "summary": "The basics of markdown ready to style!",
            "date_modified": "2017-06-28T00:00:00Z",
            "author": {
                "name": "Bryan Stoner",
                "url": "http://mimoduo.surge.sh/"
            }
        },
        {
            "id": "raven-doc",
            "html_content": "<h2 id=\"getting-started\">Getting Started</h2>\n<p>First, let's start with some of the basics of Raven by detailing where everything is:</p>\n<ul>\n<li><strong>content</strong>: markdown files representing your blog posts</li>\n<li><strong>output</strong>: static files generated based on the theme and content</li>\n<li><strong>themes</strong>: appearance and markup of your blog</li>\n</ul>\n<h3 id=\"installing-raven\">Installing Raven</h3>\n<p>Once you're set with <a href=\"https://nodejs.org/en/\">npm</a>, whip out your terminal and enter in the following:</p>\n<pre><code class=\"language-ssh\">git clone https://github.com/mimoduo/raven.git\ncd raven\nsudo npm install gulp-cli -g\nnpm install\ngulp\n</code></pre>\n<blockquote>\n<p><strong>That's it!</strong> Gulp will begin to process all posts, spin up a live reload server, and begin watching for any post, template, icon, or style changes.</p>\n</blockquote>\n<p><strong>Now you're officially ready to start creating your new blog by</strong>:</p>\n<ul>\n<li><a href=\"#configuring-raven\">configuring your blog's settings</a>,</li>\n<li><a href=\"#structuring-your-blog\">structuring your blog</a>,</li>\n<li><a href=\"#styling-your-blog\">styling your blog</a>,</li>\n<li>and <a href=\"#creating-content\">creating markdown content</a>!</li>\n</ul>\n<h2 id=\"how-raven-works\">How Raven Works</h2>\n<p>Raven grabs all the markdown files you've written in the content folder and processes them as such:</p>\n<p><strong>markdown &gt;&gt; json &gt;&gt; pug :: index/post-detail/categories pages</strong></p>\n<ol>\n<li>Retrieves the contents of each markdown file</li>\n<li>Processes the file's front matter field</li>\n<li>Renders the file's markdown content into viable HTML</li>\n<li>Pushes a json object representation of the file to a blog array</li>\n<li>Sorts the newly created array by date</li>\n<li>Sorts the articles by category</li>\n<li>Compiles index pages using the blog array</li>\n<li>Compiles post detail pages using the blog array</li>\n<li>Compiles category pages using the blog array</li>\n</ol>\n<h2 id=\"configuring-raven\">Configuring Raven</h2>\n<p>Raven pulls in the <code>&quot;data&quot;</code> object from the <strong>package.json</strong> file to render your blog. <em>Feel free to add key: value pairs here to help better represent your blog</em>:</p>\n<pre><code class=\"language-js\"><span class=\"hljs-string\">\"data\"</span>: {\n  <span class=\"hljs-string\">\"site\"</span>: {\n    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"raven\"</span>,\n    <span class=\"hljs-string\">\"url\"</span>: <span class=\"hljs-string\">\"raven.surge.sh\"</span>\n  },\n  <span class=\"hljs-string\">\"fonts\"</span>: [\n    {\n      <span class=\"hljs-string\">\"family\"</span>: <span class=\"hljs-string\">\"Oxygen\"</span>,\n      <span class=\"hljs-string\">\"weights\"</span>: <span class=\"hljs-string\">\"300,400,700\"</span>\n    }\n  ],\n  <span class=\"hljs-string\">\"analytics\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-string\">\"disqus\"</span>: {\n    <span class=\"hljs-string\">\"include\"</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-string\">\"shortname\"</span>: <span class=\"hljs-string\">\"raven-blog\"</span>\n  },\n  <span class=\"hljs-string\">\"static\"</span>: <span class=\"hljs-string\">\"output\"</span>,\n  <span class=\"hljs-string\">\"theme\"</span>: <span class=\"hljs-string\">\"themes/feather\"</span>,\n  <span class=\"hljs-string\">\"templates\"</span>: <span class=\"hljs-string\">\"themes/feather\"</span>,\n  <span class=\"hljs-string\">\"pager\"</span>: <span class=\"hljs-number\">8</span>,\n  <span class=\"hljs-string\">\"links\"</span>: {\n    <span class=\"hljs-string\">\"social\"</span>: [\n      {\n        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Github\"</span>,\n        <span class=\"hljs-string\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.com\"</span>\n      },\n      {\n        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Codepen\"</span>,\n        <span class=\"hljs-string\">\"url\"</span>: <span class=\"hljs-string\">\"https://codepen.io\"</span>\n      }\n    ]\n  }\n}\n</code></pre>\n<h3 id=\"data-object-reference\">Data Object Reference</h3>\n<ul>\n<li><strong>fonts</strong>: provides pug the data needed to dynamically pull google fonts</li>\n<li><strong>static</strong>: determines the output directory of static content</li>\n<li><strong>theme</strong>: determines which sass theme folder to pull from</li>\n<li><strong>templates</strong>: determines which pug templates folder to pull from</li>\n<li><strong>pager</strong>: the amount of posts on each index page</li>\n</ul>\n<h3 id=\"using-data-within-templates\">Using Data Within Templates</h3>\n<p>Data can be referenced within pug by <strong>evaluating template locals</strong>:</p>\n<pre><code class=\"language-pug\">//- Render the site name from data: { site: { name: &quot;&quot;}}\nh1= data.site.name\np Thanks to the power of Raven my blog, #{data.site.name}, was possible!\n\n//- Render each link from data: { links: { social: []}}\neach link in data.links.social\n  a(href=link.url)= link.name\n\n//- Render arbitrary values from data: { custom: &quot;&quot;}\nh2= data.custom\n</code></pre>\n<h2 id=\"structuring-your-blog\">Structuring Your Blog</h2>\n<p>The first thing you'll likely want to do is modify the templates a bit, starting from base.pug. If you haven't written in pug before, here's an <a href=\"http://mimoduo.surge.sh/learn-pug-js-with-pugs.html\">awesome pug tutorial</a> for you!</p>\n<blockquote>\n<p><strong>Remember</strong>, all of the variables used within each template are provided to pug from your <em>package.json's</em> <code>&quot;data&quot;</code> <em>object</em> and <em>each markdown post's front matter</em>.</p>\n</blockquote>\n<p><strong>base.pug</strong> is the foundational template that provides the structure to all other page templates, namely:</p>\n<ul>\n<li><strong>index.pug</strong>: <em>list view for blog articles</em></li>\n<li><strong>post-detail.pug</strong>: <em>detail view for a specific blog article</em></li>\n</ul>\n<p>All other templates are considered <strong>partials</strong> that are included on the aforementioned templates:</p>\n<ul>\n<li><strong>post.pug</strong>: foundational template to represent each post</li>\n<li><strong>pager.pug</strong>: provides the ability to chunk your blog list</li>\n<li><strong>analytics.pug</strong>: <em>conditionally included based on your blog's settings</em></li>\n<li><strong>disqus.pug</strong>: <em>conditionally included based on your blog's settings</em></li>\n</ul>\n<h2 id=\"styling-your-blog\">Styling Your Blog</h2>\n<p>All of the classes used within the base templates are available to style within the <strong>feather theme</strong> under <code>/themes/feather/sass/*</code>. For those new to Sass, here's a quick <a href=\"https://codepen.io/mimoduo/post/sass-cheat-sheet\">sass cheat sheet</a> for you!</p>\n<p>There are a few utility files to help you through development:</p>\n<ul>\n<li>normalize.css: <em>basic reset for browser consistency</em></li>\n<li>functions.scss: <em>several inline font sizing functions for ems &amp; rems</em></li>\n<li>variables.scss: <em>grid variables &amp; a space for custom variables</em></li>\n</ul>\n<h3 id=\"creating-your-own-theme\">Creating Your Own Theme</h3>\n<p>Creating your own theme is a piece of cake. Since Raven treats markup and styles separately, you can continue to use the feather theme templates while developing your own theme outside of feather. <em>Just reconfigure your blog's settings to point to a different theme folder</em>:</p>\n<pre><code class=\"language-json\">\"data\": {\n  \"theme\": \"themes/yourTheme\"\n}\n</code></pre>\n<p>Afterwards, make sure that your new theme folder contains the following folder structure for gulp to process Sass correctly:</p>\n<p><code>/themes/yourTheme/sass/site.scss</code></p>\n<h2 id=\"creating-content\">Creating Content</h2>\n<p>Each blog article is written in <strong>Markdown</strong> with the addition of <strong>front matter</strong>. If you're diggin for a markdown tutorial, <a href=\"https://daringfireball.net/projects/markdown/syntax\">daring fireball</a> has you covered! The following front matter meets the minimum requirements for a blog article:</p>\n<pre><code class=\"language-md\">---\ntitle: Blog Post Title Field\ndate: 2017-07-24\ncategory: navie\n<span class=\"hljs-section\">summary: Blog Post Summary Field\n---</span>\n\n<span class=\"hljs-section\"># Your Markdown Content!</span>\n</code></pre>\n<p>After saving this post, you'll notice a new entry on the index page, a new detail page, and a new category in the main navigation.</p>\n<h2 id=\"fly-with-the-wind\">Fly With the Wind!</h2>\n<p>All the basics of Raven have been covered! There's a bit more to explore and a lot more on the way. I hope you enjoy publishing your blog with Raven! And if you have already published your blog, wouldn't you want some free recognition? Jump over to the <a href=\"https://github.com/mimoduo/raven\">Raven github repo</a> and add your blog to the <a href=\"https://github.com/mimoduo/raven#blogs-running-raven\">Blogs Running Raven</a> section.</p>\n",
            "url": "http://raven.surge.sh/raven-doc.html",
            "title": "Raven Documentation",
            "summary": "AAWWW yeaaa!!! Time to get drilling down to the Raven blog workflow - from getting familiar with Raven's structure to creating your own theme. If you're familiar with Pelican, you'll feel right at home (p^-^)p",
            "date_modified": "2017-06-29T00:00:00Z",
            "author": {
                "name": "Bryan Stoner",
                "url": "http://mimoduo.surge.sh/"
            }
        }
    ]
}