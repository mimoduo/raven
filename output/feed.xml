<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Raven</title>
        <link>http://raven.surge.sh/</link>
        <description>A refined and flexible static blog generator</description>
        <lastBuildDate>Sun, 14 Jul 2013 04:00:00 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <image>
            <title>Raven</title>
            <url>http://raven.surge.sh/favicon-32x32.png</url>
            <link>http://raven.surge.sh/</link>
        </image>
        <copyright>All rights reserved 2017, Bryan Stoner</copyright>
        <atom:link href="http://raven.surge.sh/atom" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[From the Future]]></title>
            <link>http://raven.surge.sh/future-post.html</link>
            <guid>http://raven.surge.sh/future-post.html</guid>
            <pubDate>Thu, 29 Jun 2220 00:00:00 GMT</pubDate>
            <description><![CDATA[Posts from the future will not be displayed unless their date is older than or equal to the current date]]></description>
            <author>mimoduo@gmail.com (Bryan Stoner)</author>
        </item>
        <item>
            <title><![CDATA[Markdown Style Guide]]></title>
            <link>http://raven.surge.sh/markdown-style-guide.html</link>
            <guid>http://raven.surge.sh/markdown-style-guide.html</guid>
            <pubDate>Wed, 28 Jun 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[The basics of markdown ready to style!]]></description>
            <content:encoded><![CDATA[<h1 id="h1">h1</h1>
<p><strong>Heading 1</strong> has <em>1 pounds sign</em>.</p>
<h2 id="h2">h2</h2>
<p><strong>Heading 2</strong> has <em>2 pounds signs</em>.</p>
<h3 id="h3">h3</h3>
<p><strong>Heading 3</strong> has <em>3 pounds signs</em>.</p>
<h4 id="h4">h4</h4>
<p><strong>Heading 4</strong> has <em>4 pounds signs</em>.</p>
<h5 id="h5">h5</h5>
<p><strong>Heading 5</strong> has <em>5 pounds signs</em>.</p>
<h6 id="h6">h6</h6>
<p><strong>Heading 6</strong> has <em>6 pounds signs</em>.</p>
<h3 id="formatting-text">Formatting Text</h3>
<p>A paragraph can be as simple as <strong>bolded text</strong> or as hard as <em>italicized marks</em>. Yet creating a <a href="google.com">link</a> can be as easy as pie.</p>
<h3 id="blockquotes">Blockquotes</h3>
<blockquote>
<p>And there's always the trusty blockquote to emphasize an incredible situation.</p>
</blockquote>
<h3 id="unordered-list">Unordered List</h3>
<ul>
<li>Lists</li>
<li>are</li>
<li>just</li>
<li>as</li>
<li>simple</li>
</ul>
<h3 id="ordered-list">Ordered List</h3>
<ol>
<li>So</li>
<li>are</li>
<li>ordered</li>
<li>lists</li>
</ol>
<h3 id="code-snippets">Code Snippets</h3>
<pre><code class="language-css"><span class="hljs-selector-class">.mage</span> {
  <span class="hljs-attribute">content</span>: <span class="hljs-string">'code snippet'</span>
}
</code></pre>
<pre><code class="language-js"><span class="hljs-keyword">var</span> delthea = <span class="hljs-string">'orange raven'</span>;
</code></pre>
<h3 id="tables">Tables</h3>
<table>
  <tr>
    <th>Effect</th>
    <th>Example</th>
  </tr>
  <tr>
    <td>Willstrums</td>
    <td>Dating a tree back to the 18th century</td>
  </tr>
  <tr>
    <td>Tashle</td>
    <td>Assigning a rabbit the name of a turtle</td>
  </tr>
</table>
]]></content:encoded>
            <author>mimoduo@gmail.com (Bryan Stoner)</author>
        </item>
        <item>
            <title><![CDATA[Raven Documentation]]></title>
            <link>http://raven.surge.sh/raven-doc.html</link>
            <guid>http://raven.surge.sh/raven-doc.html</guid>
            <pubDate>Thu, 29 Jun 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[AAWWW yeaaa!!! Time to get drilling down to the Raven blog workflow - from getting familiar with Raven's structure to creating your own theme. If you're familiar with Pelican, you'll feel right at home (p^-^)p]]></description>
            <content:encoded><![CDATA[<h3 id="installing-raven">Installing Raven</h3>
<p>Once you're set with <a href="https://nodejs.org/en/">npm</a>, whip out your terminal and enter in the following:</p>
<pre><code class="language-ssh">git clone https://github.com/mimoduo/raven.git
cd raven
sudo npm install gulp-cli -g
npm install
gulp
</code></pre>
<blockquote>
<p><strong>That's it!</strong> Gulp will begin to process all posts, spin up a live reload server, and begin watching for any post, template, icon, or style changes.</p>
</blockquote>
<p><strong>Now you're officially ready to start creating your new blog by</strong>:</p>
<ul>
<li><a href="#wheres-your">learning Raven's folder structure</a>,</li>
<li><a href="#how-raven-works">learning how Raven works</a>,</li>
<li><a href="#configuring-raven">configuring your blog's settings</a>,</li>
<li><a href="#structuring-your-blog">structuring your blog</a>,</li>
<li><a href="#styling-your-blog">styling your blog</a>,</li>
<li>and <a href="#creating-content">creating markdown content</a>!</li>
</ul>
<h2 id="wheres-your">Where's Your @&amp;#*</h2>
<p>First, let's start with some of the basics of Raven by detailing where everything is:</p>
<ul>
<li><strong>content</strong>: markdown files representing your blog posts</li>
<li><strong>output</strong>: static files generated based on the theme and content</li>
<li><strong>themes</strong>: appearance and markup of your blog</li>
</ul>
<h2 id="how-raven-works">How Raven Works</h2>
<p>Raven grabs all the markdown files you've written in the content folder and processes them as such:</p>
<p><strong>markdown &gt;&gt; json &gt;&gt; pug :: index/post-detail/categories pages</strong></p>
<ol>
<li>Retrieves the contents of each markdown file</li>
<li>Processes the file's front matter field</li>
<li>Renders the file's markdown content into viable HTML</li>
<li>Pushes a json object representation of the file to a blog array</li>
<li>Sorts the newly created array by date</li>
<li>Sorts the articles by category</li>
<li>Compiles index pages using the blog array</li>
<li>Compiles post detail pages using the blog array</li>
<li>Compiles category pages using the blog array</li>
</ol>
<h2 id="configuring-raven">Configuring Raven</h2>
<p>Raven pulls in the <code>&quot;data&quot;</code> object from the <strong>package.json</strong> file to render your blog. <em>Feel free to add key: value pairs here to help better represent your blog</em>:</p>
<pre><code class="language-js"><span class="hljs-string">"data"</span>: {
  <span class="hljs-string">"site"</span>: {
    <span class="hljs-string">"name"</span>: <span class="hljs-string">"raven"</span>,
    <span class="hljs-string">"url"</span>: <span class="hljs-string">"raven.surge.sh"</span>
  },
  <span class="hljs-string">"fonts"</span>: [
    {
      <span class="hljs-string">"family"</span>: <span class="hljs-string">"Oxygen"</span>,
      <span class="hljs-string">"weights"</span>: <span class="hljs-string">"300,400,700"</span>
    }
  ],
  <span class="hljs-string">"analytics"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-string">"disqus"</span>: {
    <span class="hljs-string">"include"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-string">"shortname"</span>: <span class="hljs-string">"raven-blog"</span>
  },
  <span class="hljs-string">"static"</span>: <span class="hljs-string">"output"</span>,
  <span class="hljs-string">"theme"</span>: <span class="hljs-string">"themes/feather"</span>,
  <span class="hljs-string">"templates"</span>: <span class="hljs-string">"themes/feather"</span>,
  <span class="hljs-string">"pager"</span>: <span class="hljs-number">8</span>,
  <span class="hljs-string">"links"</span>: {
    <span class="hljs-string">"social"</span>: [
      {
        <span class="hljs-string">"name"</span>: <span class="hljs-string">"Github"</span>,
        <span class="hljs-string">"url"</span>: <span class="hljs-string">"https://github.com"</span>
      },
      {
        <span class="hljs-string">"name"</span>: <span class="hljs-string">"Codepen"</span>,
        <span class="hljs-string">"url"</span>: <span class="hljs-string">"https://codepen.io"</span>
      }
    ]
  }
}
</code></pre>
<h3 id="data-object-reference">Data Object Reference</h3>
<ul>
<li><strong>fonts</strong>: provides pug the data needed to dynamically pull google fonts</li>
<li><strong>static</strong>: determines the output directory of static content</li>
<li><strong>theme</strong>: determines which sass theme folder to pull from</li>
<li><strong>templates</strong>: determines which pug templates folder to pull from</li>
<li><strong>pager</strong>: the amount of posts on each index page</li>
</ul>
<h3 id="using-data-within-templates">Using Data Within Templates</h3>
<p>Data can be referenced within pug by <strong>evaluating template locals</strong>:</p>
<pre><code class="language-pug">//- Render the site name from data: { site: { name: &quot;&quot;}}
h1= data.site.name
p Thanks to the power of Raven my blog, #{data.site.name}, was possible!

//- Render each link from data: { links: { social: []}}
each link in data.links.social
  a(href=link.url)= link.name

//- Render arbitrary values from data: { custom: &quot;&quot;}
h2= data.custom
</code></pre>
<h2 id="structuring-your-blog">Structuring Your Blog</h2>
<p>The first thing you'll likely want to do is modify the templates a bit, starting from base.pug. If you haven't written in pug before, here's an <a href="http://mimoduo.surge.sh/learn-pug-js-with-pugs.html">awesome pug tutorial</a> for you!</p>
<blockquote>
<p><strong>Remember</strong>, all of the variables used within each template are provided to pug from your <em>package.json's</em> <code>&quot;data&quot;</code> <em>object</em> and <em>each markdown post's front matter</em>.</p>
</blockquote>
<p><strong>base.pug</strong> is the foundational template that provides the structure to all other page templates, namely:</p>
<ul>
<li><strong>index.pug</strong>: <em>list view for blog articles</em></li>
<li><strong>post-detail.pug</strong>: <em>detail view for a specific blog article</em></li>
</ul>
<p>All other templates are considered <strong>partials</strong> that are included on the aforementioned templates:</p>
<ul>
<li><strong>post.pug</strong>: foundational template to represent each post</li>
<li><strong>pager.pug</strong>: provides the ability to chunk your blog list</li>
<li><strong>analytics.pug</strong>: <em>conditionally included based on your blog's settings</em></li>
<li><strong>disqus.pug</strong>: <em>conditionally included based on your blog's settings</em></li>
</ul>
<h2 id="styling-your-blog">Styling Your Blog</h2>
<p>All of the classes used within the base templates are available to style within the <strong>feather theme</strong> under <code>/themes/feather/sass/*</code>. For those new to Sass, here's a quick <a href="https://codepen.io/mimoduo/post/sass-cheat-sheet">sass cheat sheet</a> for you!</p>
<p>There are a few utility files to help you through development:</p>
<ul>
<li>normalize.css: <em>basic reset for browser consistency</em></li>
<li>functions.scss: <em>several inline font sizing functions for ems &amp; rems</em></li>
<li>variables.scss: <em>grid variables &amp; a space for custom variables</em></li>
</ul>
<h3 id="creating-your-own-theme">Creating Your Own Theme</h3>
<p>Creating your own theme is a piece of cake. Since Raven treats markup and styles separately, you can continue to use the feather theme templates while developing your own theme outside of feather. <em>Just reconfigure your blog's settings to point to a different theme folder</em>:</p>
<pre><code class="language-json">"data": {
  "theme": "themes/yourTheme"
}
</code></pre>
<p>Afterwards, make sure that your new theme folder contains the following folder structure for gulp to process Sass correctly:</p>
<p><code>/themes/yourTheme/sass/site.scss</code></p>
<h2 id="creating-content">Creating Content</h2>
<p>Each blog article is written in <strong>Markdown</strong> with the addition of <strong>front matter</strong>. If you're diggin for a markdown tutorial, <a href="https://daringfireball.net/projects/markdown/syntax">daring fireball</a> has you covered! The following front matter meets the minimum requirements for a blog article:</p>
<pre><code class="language-md">---
title: Blog Post Title Field
date: 2017-07-24
category: navie
<span class="hljs-section">summary: Blog Post Summary Field
---</span>

<span class="hljs-section"># Your Markdown Content!</span>
</code></pre>
<p>After saving this post, you'll notice a new entry on the index page, a new detail page, and a new category in the main navigation.</p>
<h2 id="fly-with-the-wind">Fly With the Wind!</h2>
<p>All the basics of Raven have been covered! There's a bit more to explore and a lot more on the way. I hope you enjoy publishing your blog with Raven! And if you have already published your blog, wouldn't you want some free recognition? Jump over to the <a href="https://github.com/mimoduo/raven">Raven github repo</a> and add your blog to the <a href="https://github.com/mimoduo/raven#blogs-running-raven">Blogs Running Raven</a> section.</p>
]]></content:encoded>
            <author>mimoduo@gmail.com (Bryan Stoner)</author>
        </item>
    </channel>
</rss>